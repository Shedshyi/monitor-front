import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { Typography, Card, Table, Spin } from 'antd';
import axios from 'axios';

const { Title, Text } = Typography;

const UserProfile = () => {
  const { id } = useParams();  // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL
  const [user, setUser] = useState(null);
  const [indicators, setIndicators] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchUserProfile = async () => {
      try {
        const response = await axios.get(`https://monitor-mmlp.onrender.com/api/users/${id}/`);
        
        console.log('Data from API:', response.data);  // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç API

        setUser(response.data.user);  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setIndicators(response.data.indicators);  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      } finally {
        setLoading(false);  // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      }
    };

    fetchUserProfile();
  }, [id]);

  if (loading) return <Spin size="large" />;  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä, –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è

  console.log('User:', user);
  console.log('Indicators:', indicators);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ points –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
  indicators.forEach((indicator, index) => {
    console.log(`Indicator ${index}:`, indicator);
    console.log(`Points:`, indicator.points); // –õ–æ–≥–∏—Ä—É–µ–º –±–∞–ª–ª—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ total_score –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
  const totalScore = user?.total_score || 0;

  const columns = [
    {
      title: '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å',
      dataIndex: 'indicator_title',
      key: 'indicator_title',
    },
    {
      title: '–ë–∞–ª–ª—ã',
      dataIndex: 'points',  // –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ points
      key: 'points',  // –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ points
    },
  ];

  return (
    <div style={{ padding: '20px', maxWidth: '900px', margin: '0 auto' }}>
      <Title>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</Title>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
      <Card style={{ marginBottom: '20px' }}>
        <Text strong>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</Text> {user?.username} <br />
        <Text strong>Email:</Text> {user?.email} <br />
        <Text strong>–†–æ–ª—å:</Text> {user?.is_admin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–£—á–∏—Ç–µ–ª—å'} <br />
        <Text strong>üèÜ –û–±—â–∏–π –±–∞–ª–ª:</Text> {totalScore}
      </Card>

      {/* –¢–∞–±–ª–∏—Ü–∞ —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ */}
      <Card>
        <Title level={4}>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –±–∞–ª–ª—ã:</Title>
        <Table
          columns={columns}
          dataSource={indicators}
          rowKey="id"
          pagination={false}  // –ë–µ–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        />
      </Card>
    </div>
  );
};

export default UserProfile;
