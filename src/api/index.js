import axios from 'axios';

const API_URL = process.env.REACT_APP_API_URL;

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
export const getDirections = async () => {
  try {
    const response = await axios.get(`${API_URL}/api/directions/`);
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:', error);
  }
};

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
export const getIndicators = async () => {
  try {
    const response = await axios.get(`${API_URL}/api/indicators/`);
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π:', error);
  }
};

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π (–±–∞–ª–ª—ã —É—á–∏—Ç–µ–ª—è)
export const getMyScores = async () => {
  try {
    const response = await axios.get(`${API_URL}/api/my-scores/`);
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∞–ª–ª–æ–≤:', error);
  }
};

// ‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫ —É—á–∏—Ç–µ–ª—é
export const assignIndicators = async (teacherId, indicators) => {
  try {
    const response = await axios.post(`${API_URL}/api/assign/`, {
      teacher: teacherId,
      indicators: indicators
    });
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π:', error);
  }
};

// ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
const fetchTestDirections = async () => {
  try {
    const response = await axios.get(`${API_URL}/api/test-directions/`);
    console.log('–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', response.data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:', error);
  }
};

fetchTestDirections();

// ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
export const loginUser = async (credentials) => {
  try {
    console.log('‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∏–Ω–∞...', credentials);
    const response = await axios.post(`https://monitor-mmlp.onrender.com/api/login/`, credentials);
    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
    if (error.response) {
      console.error('üì¶ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
      console.error('üî¢ –°—Ç–∞—Ç—É—Å:', error.response.status);
    } else if (error.request) {
      console.error('üì° –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞:', error.request);
    } else {
      console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }
    throw error;
  }
};


